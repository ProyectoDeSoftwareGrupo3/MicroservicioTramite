// <auto-generated />
using System;
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(TramiteDbContext))]
    partial class TramiteDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Tramite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AireLibre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<int>("Cantidadpersonas")
                        .HasColumnType("int");

                    b.Property<bool>("Castrados")
                        .HasColumnType("bit");

                    b.Property<bool>("Chicos")
                        .HasColumnType("bit");

                    b.Property<int>("EdadHijoMenor")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFinalizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HayAnimales")
                        .HasColumnType("bit");

                    b.Property<int>("HorasSolo")
                        .HasColumnType("int");

                    b.Property<string>("LugarAdopcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotivoAdopcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaseoMes")
                        .HasColumnType("int");

                    b.Property<bool>("PropietarioInquilino")
                        .HasColumnType("bit");

                    b.Property<int>("TramiteEstadoId")
                        .HasColumnType("int");

                    b.Property<int>("TramiteTipoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioAdoptanteId")
                        .HasColumnType("int");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Vacunados")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("TramiteEstadoId");

                    b.HasIndex("TramiteTipoId");

                    b.ToTable("Tramite", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AireLibre = "Patio",
                            AnimalId = 1,
                            Cantidadpersonas = 4,
                            Castrados = true,
                            Chicos = true,
                            EdadHijoMenor = 10,
                            FechaFinalizacion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicio = new DateTime(2024, 6, 10, 17, 31, 11, 657, DateTimeKind.Local).AddTicks(2457),
                            HayAnimales = true,
                            HorasSolo = 4,
                            LugarAdopcion = "Casa",
                            MotivoAdopcion = "Compania",
                            PaseoMes = 10,
                            PropietarioInquilino = true,
                            TramiteEstadoId = 2,
                            TramiteTipoId = 1,
                            UsuarioAdoptanteId = 1,
                            UsuarioId = new Guid("bf825f14-9af5-458c-9339-3e789a17a88c"),
                            Vacunados = true
                        },
                        new
                        {
                            Id = 2,
                            AireLibre = "No posee",
                            AnimalId = 2,
                            Cantidadpersonas = 4,
                            Castrados = false,
                            Chicos = true,
                            EdadHijoMenor = 0,
                            FechaFinalizacion = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicio = new DateTime(2024, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HayAnimales = false,
                            HorasSolo = 2,
                            LugarAdopcion = "Casa",
                            MotivoAdopcion = "Compania",
                            PaseoMes = 10,
                            PropietarioInquilino = true,
                            TramiteEstadoId = 1,
                            TramiteTipoId = 1,
                            UsuarioAdoptanteId = 2,
                            UsuarioId = new Guid("f60a95b7-dcdc-4b96-aa63-0cd6bafdff29"),
                            Vacunados = false
                        },
                        new
                        {
                            Id = 3,
                            AireLibre = "Granja",
                            AnimalId = 3,
                            Cantidadpersonas = 4,
                            Castrados = true,
                            Chicos = true,
                            EdadHijoMenor = 10,
                            FechaFinalizacion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicio = new DateTime(2024, 2, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HayAnimales = true,
                            HorasSolo = 4,
                            LugarAdopcion = "Granja",
                            MotivoAdopcion = "Vigilancia",
                            PaseoMes = 5,
                            PropietarioInquilino = true,
                            TramiteEstadoId = 3,
                            TramiteTipoId = 1,
                            UsuarioAdoptanteId = 4,
                            UsuarioId = new Guid("111c5b95-d813-4070-a625-0ddbfc8bc797"),
                            Vacunados = true
                        },
                        new
                        {
                            Id = 4,
                            AireLibre = "no posee",
                            AnimalId = 4,
                            Cantidadpersonas = 2,
                            Castrados = false,
                            Chicos = false,
                            EdadHijoMenor = 0,
                            FechaFinalizacion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicio = new DateTime(2024, 1, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HayAnimales = false,
                            HorasSolo = 4,
                            LugarAdopcion = "Casa",
                            MotivoAdopcion = "Vigilancia",
                            PaseoMes = 4,
                            PropietarioInquilino = false,
                            TramiteEstadoId = 2,
                            TramiteTipoId = 1,
                            UsuarioAdoptanteId = 4,
                            UsuarioId = new Guid("1af2a1e5-179a-4d93-8b89-b8989a03cd58"),
                            Vacunados = false
                        },
                        new
                        {
                            Id = 5,
                            AireLibre = "Patio",
                            AnimalId = 5,
                            Cantidadpersonas = 4,
                            Castrados = true,
                            Chicos = true,
                            EdadHijoMenor = 10,
                            FechaFinalizacion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicio = new DateTime(2024, 4, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HayAnimales = true,
                            HorasSolo = 4,
                            LugarAdopcion = "Casa",
                            MotivoAdopcion = "Compania",
                            PaseoMes = 10,
                            PropietarioInquilino = true,
                            TramiteEstadoId = 2,
                            TramiteTipoId = 2,
                            UsuarioAdoptanteId = 4,
                            UsuarioId = new Guid("80898b3b-e900-436d-b37a-04206aecd84c"),
                            Vacunados = true
                        });
                });

            modelBuilder.Entity("Domain.Entities.TramiteEstado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TramiteEstado", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Aprobado"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Revisión"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Rechazado"
                        });
                });

            modelBuilder.Entity("Domain.Entities.TramiteTipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TramiteTipo", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Adopción"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Transito"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Tramite", b =>
                {
                    b.HasOne("Domain.Entities.TramiteEstado", "TramiteEstado")
                        .WithMany("Tramites")
                        .HasForeignKey("TramiteEstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.TramiteTipo", "TramiteTipo")
                        .WithMany("Tramites")
                        .HasForeignKey("TramiteTipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TramiteEstado");

                    b.Navigation("TramiteTipo");
                });

            modelBuilder.Entity("Domain.Entities.TramiteEstado", b =>
                {
                    b.Navigation("Tramites");
                });

            modelBuilder.Entity("Domain.Entities.TramiteTipo", b =>
                {
                    b.Navigation("Tramites");
                });
#pragma warning restore 612, 618
        }
    }
}
