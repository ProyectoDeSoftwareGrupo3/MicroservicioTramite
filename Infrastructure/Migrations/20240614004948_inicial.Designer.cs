// <auto-generated />
using System;
using Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(TramiteDbContext))]
    [Migration("20240614004948_inicial")]
    partial class inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.CabeceraTramite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("TramiteAdopcionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TramiteTransitoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioAdoptanteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.HasIndex("TramiteAdopcionId")
                        .IsUnique()
                        .HasFilter("[TramiteAdopcionId] IS NOT NULL");

                    b.HasIndex("TramiteTransitoId")
                        .IsUnique()
                        .HasFilter("[TramiteTransitoId] IS NOT NULL");

                    b.ToTable("CabeceraTramite", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnimalId = 1,
                            EstadoId = 2,
                            FechaFinal = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicio = new DateTime(2024, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TramiteAdopcionId = new Guid("54af2b5e-b9fb-405e-8520-3d79af6b1a8d"),
                            UsuarioAdoptanteId = new Guid("07c32251-5f12-4cfb-b8b6-25fbbfb3b883"),
                            UsuarioId = new Guid("d3bb6c68-0b36-47f8-872d-cb364441f773")
                        },
                        new
                        {
                            Id = 2,
                            AnimalId = 1,
                            EstadoId = 2,
                            FechaFinal = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicio = new DateTime(2024, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TramiteAdopcionId = new Guid("7e6066d1-7754-44e7-9758-706bdc60a88a"),
                            UsuarioAdoptanteId = new Guid("f3f4e412-04c1-4af1-8f4f-9a320cc6b4fc"),
                            UsuarioId = new Guid("8441c475-e0b6-4ec1-88d6-b8fc8f4a309b")
                        },
                        new
                        {
                            Id = 3,
                            AnimalId = 1,
                            EstadoId = 2,
                            FechaFinal = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicio = new DateTime(2024, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TramiteAdopcionId = new Guid("e2780dbb-17dc-44dd-97f0-4a01a5b4ae86"),
                            UsuarioAdoptanteId = new Guid("9c91b132-b88b-4824-9991-3ce69155e6ab"),
                            UsuarioId = new Guid("c0c5f5d8-006c-4b59-b4d7-70c3b04871d0")
                        },
                        new
                        {
                            Id = 4,
                            AnimalId = 1,
                            EstadoId = 2,
                            FechaFinal = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicio = new DateTime(2024, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TramiteTransitoId = new Guid("74730c71-9150-42d9-a087-56bbccad1c79"),
                            UsuarioAdoptanteId = new Guid("06dd8e49-b48e-4362-8c75-ab7304f05284"),
                            UsuarioId = new Guid("bc348cff-61d6-4063-8a3a-3f6619b34127")
                        },
                        new
                        {
                            Id = 5,
                            AnimalId = 1,
                            EstadoId = 2,
                            FechaFinal = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FechaInicio = new DateTime(2024, 6, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            TramiteTransitoId = new Guid("5c0c5be5-f32d-4743-87ab-9f025c09811f"),
                            UsuarioAdoptanteId = new Guid("38fbe731-341e-412f-a9ad-f6d3dd41aef3"),
                            UsuarioId = new Guid("991bbb4e-ebca-4c37-9bf5-fd2a2b7e663b")
                        });
                });

            modelBuilder.Entity("Domain.Entities.TramiteAdopcion", b =>
                {
                    b.Property<Guid>("TramiteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AireLibre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CantidadPersonas")
                        .HasColumnType("int");

                    b.Property<bool>("Castrados")
                        .HasColumnType("bit");

                    b.Property<int?>("EdadHijoMenor")
                        .HasColumnType("int");

                    b.Property<bool>("HayChicos")
                        .HasColumnType("bit");

                    b.Property<bool>("HayMascotas")
                        .HasColumnType("bit");

                    b.Property<int>("HorasSolo")
                        .HasColumnType("int");

                    b.Property<string>("MotivoAdopcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaseoXMes")
                        .HasColumnType("int");

                    b.Property<bool>("PropietarioInquilino")
                        .HasColumnType("bit");

                    b.Property<bool>("Vacunados")
                        .HasColumnType("bit");

                    b.HasKey("TramiteId");

                    b.ToTable("TramiteAdopcion", (string)null);

                    b.HasData(
                        new
                        {
                            TramiteId = new Guid("54af2b5e-b9fb-405e-8520-3d79af6b1a8d"),
                            AireLibre = "Patio",
                            CantidadPersonas = 4,
                            Castrados = true,
                            EdadHijoMenor = 10,
                            HayChicos = true,
                            HayMascotas = false,
                            HorasSolo = 1,
                            MotivoAdopcion = "Compania Y seguridad",
                            PaseoXMes = 10,
                            PropietarioInquilino = true,
                            Vacunados = true
                        },
                        new
                        {
                            TramiteId = new Guid("7e6066d1-7754-44e7-9758-706bdc60a88a"),
                            AireLibre = "Patio",
                            CantidadPersonas = 5,
                            Castrados = true,
                            EdadHijoMenor = 10,
                            HayChicos = true,
                            HayMascotas = false,
                            HorasSolo = 1,
                            MotivoAdopcion = "Compañía y seguridad",
                            PaseoXMes = 10,
                            PropietarioInquilino = true,
                            Vacunados = true
                        },
                        new
                        {
                            TramiteId = new Guid("e2780dbb-17dc-44dd-97f0-4a01a5b4ae86"),
                            AireLibre = "Jardín",
                            CantidadPersonas = 2,
                            Castrados = true,
                            HayChicos = false,
                            HayMascotas = false,
                            HorasSolo = 2,
                            MotivoAdopcion = "Compañía y entretenimiento",
                            PaseoXMes = 15,
                            PropietarioInquilino = false,
                            Vacunados = true
                        },
                        new
                        {
                            TramiteId = new Guid("d0940fb6-b3a3-4c14-ad0c-d565be450f1c"),
                            AireLibre = "Patio grande",
                            CantidadPersonas = 6,
                            Castrados = false,
                            EdadHijoMenor = 12,
                            HayChicos = true,
                            HayMascotas = false,
                            HorasSolo = 2,
                            MotivoAdopcion = "Compañía y cuidado",
                            PaseoXMes = 20,
                            PropietarioInquilino = false,
                            Vacunados = true
                        });
                });

            modelBuilder.Entity("Domain.Entities.TramiteEstado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TramiteEstado", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Aprobado"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Revisión"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Rechazado"
                        });
                });

            modelBuilder.Entity("Domain.Entities.TramiteTransito", b =>
                {
                    b.Property<Guid>("TramiteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ActitudHaciaAnimales")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Cantidadpersonas")
                        .HasColumnType("int");

                    b.Property<string>("ChicosYEdad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisponibilidadHoraria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Emergencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Expectativa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExperienciaDeTransito")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HayMascotas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ManejoAnimal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MedioDeTransporte")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PoliticaOrganizacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropietarioInquilino")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RazonInteres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rutina")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Seguimiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TiempoDeAcogida")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoDeEspacio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VacunadosCastrados")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TramiteId");

                    b.ToTable("TramiteTransito", (string)null);

                    b.HasData(
                        new
                        {
                            TramiteId = new Guid("74730c71-9150-42d9-a087-56bbccad1c79"),
                            ActitudHaciaAnimales = "A",
                            Cantidadpersonas = 4,
                            ChicosYEdad = "A",
                            DisponibilidadHoraria = "A",
                            Emergencia = "A",
                            Expectativa = "A",
                            ExperienciaDeTransito = "A",
                            HayMascotas = "A",
                            ManejoAnimal = "A",
                            MedioDeTransporte = "A",
                            PoliticaOrganizacion = "A",
                            PropietarioInquilino = "A",
                            RazonInteres = "A",
                            Rutina = "A",
                            Seguimiento = "A",
                            TiempoDeAcogida = "A",
                            TipoDeEspacio = "A",
                            VacunadosCastrados = "A"
                        },
                        new
                        {
                            TramiteId = new Guid("5c0c5be5-f32d-4743-87ab-9f025c09811f"),
                            ActitudHaciaAnimales = "B ",
                            Cantidadpersonas = 4,
                            ChicosYEdad = " B",
                            DisponibilidadHoraria = "B ",
                            Emergencia = "B ",
                            Expectativa = "B ",
                            ExperienciaDeTransito = "B",
                            HayMascotas = " B",
                            ManejoAnimal = "B ",
                            MedioDeTransporte = "B ",
                            PoliticaOrganizacion = "B ",
                            PropietarioInquilino = "B ",
                            RazonInteres = "B",
                            Rutina = "B ",
                            Seguimiento = "B ",
                            TiempoDeAcogida = "B ",
                            TipoDeEspacio = "B ",
                            VacunadosCastrados = "B "
                        },
                        new
                        {
                            TramiteId = new Guid("60d354f6-375b-4c3f-a94b-8aaed89303d4"),
                            ActitudHaciaAnimales = " C",
                            Cantidadpersonas = 4,
                            ChicosYEdad = " C",
                            DisponibilidadHoraria = "C ",
                            Emergencia = "C ",
                            Expectativa = "C ",
                            ExperienciaDeTransito = " C",
                            HayMascotas = " C",
                            ManejoAnimal = "C ",
                            MedioDeTransporte = " C",
                            PoliticaOrganizacion = "C ",
                            PropietarioInquilino = "C ",
                            RazonInteres = " C",
                            Rutina = "C ",
                            Seguimiento = " C",
                            TiempoDeAcogida = "C ",
                            TipoDeEspacio = "C ",
                            VacunadosCastrados = "C "
                        },
                        new
                        {
                            TramiteId = new Guid("a7e82c64-529e-4add-a922-7f845d306eb6"),
                            ActitudHaciaAnimales = "D ",
                            Cantidadpersonas = 4,
                            ChicosYEdad = "D ",
                            DisponibilidadHoraria = "D ",
                            Emergencia = "D ",
                            Expectativa = "D ",
                            ExperienciaDeTransito = "D ",
                            HayMascotas = "D ",
                            ManejoAnimal = "D ",
                            MedioDeTransporte = " D",
                            PoliticaOrganizacion = "D ",
                            PropietarioInquilino = "D ",
                            RazonInteres = " D",
                            Rutina = "D ",
                            Seguimiento = "D ",
                            TiempoDeAcogida = "D ",
                            TipoDeEspacio = "D ",
                            VacunadosCastrados = "D "
                        });
                });

            modelBuilder.Entity("Domain.Entities.CabeceraTramite", b =>
                {
                    b.HasOne("Domain.Entities.TramiteEstado", "Estado")
                        .WithMany("CabeceraTramite")
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.TramiteAdopcion", "TramiteAdopcion")
                        .WithOne("CabeceraTramite")
                        .HasForeignKey("Domain.Entities.CabeceraTramite", "TramiteAdopcionId");

                    b.HasOne("Domain.Entities.TramiteTransito", "TramiteTransito")
                        .WithOne("CabeceraTramite")
                        .HasForeignKey("Domain.Entities.CabeceraTramite", "TramiteTransitoId");

                    b.Navigation("Estado");

                    b.Navigation("TramiteAdopcion");

                    b.Navigation("TramiteTransito");
                });

            modelBuilder.Entity("Domain.Entities.TramiteAdopcion", b =>
                {
                    b.Navigation("CabeceraTramite")
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.TramiteEstado", b =>
                {
                    b.Navigation("CabeceraTramite");
                });

            modelBuilder.Entity("Domain.Entities.TramiteTransito", b =>
                {
                    b.Navigation("CabeceraTramite")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
